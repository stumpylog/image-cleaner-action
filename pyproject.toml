[project]
name = "image-cleaner-action"
version = "0.11.0"
description = "Tools to cleanup old ghcr.io images when the source is removed"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "github-action-utils>=1.1",
  "httpx[brotli,http2]>=0.28",
]

[dependency-groups]
dev = [
  "coverage[toml]~=7.8",
  "mypy",
  "pre-commit",
  "pre-commit-uv",
  "pytest",
  "pytest-cov",
  "pytest-httpx",
  "pytest-mock",
  "pytest-randomly",
  "pytest-sugar",
  "ruff",
]

[tool.ruff]
target-version = "py312"
line-length = 110
respect-gitignore = true
# https://docs.astral.sh/ruff/settings/
fix = true
show-fixes = true

output-format = "grouped"
# https://docs.astral.sh/ruff/rules/
lint.extend-select = [
  "COM",
  "E",
  "EXE",
  "F",
  "G201",
  "I",
  "ICN",
  "INP",
  "ISC",
  "PIE",
  "PLC",
  "PLE",
  "PTH",
  "RSE",
  "RUF",
  "SIM",
  "TID",
  "UP",
  "W",
]
# https://docs.astral.sh/ruff/settings/#lintisort
lint.isort.force-single-line = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = [ "tests" ]
pythonpath = [ "." ]
addopts = "--import-mode=importlib --cov"

[tool.coverage.run]
source_pkgs = [ "github", "regtools", "utils", "tests" ]
branch = true
parallel = true
omit = [
  "src/gotenberg_client/__about__.py",
  "tests/conftest.py",
  "tests/utils.py",
]

[tool.coverage.paths]
gotenberg_client = [ "src/gotenberg_client" ]
tests = [ "tests" ]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == '__main__':",
  "if TYPE_CHECKING:",
  "if SAVE_OUTPUTS:",
]

[tool.uv]
package = false
required-version = ">=0.8.0"
