# generated by datamodel-codegen:
#   filename:  input.json
#   timestamp: 2025-10-02T17:04:29+00:00

from __future__ import annotations

from typing import Any
from typing import Literal
from typing import NotRequired
from typing import TypedDict


class Owner(TypedDict):
    """
    A GitHub user.
    """

    name: NotRequired[str | None]
    email: NotRequired[str | None]
    login: str
    id: int
    node_id: str
    avatar_url: str
    gravatar_id: str | None
    url: str
    html_url: str
    followers_url: str
    following_url: str
    gists_url: str
    starred_url: str
    subscriptions_url: str
    organizations_url: str
    repos_url: str
    events_url: str
    received_events_url: str
    type: str
    site_admin: bool
    starred_at: NotRequired[str]
    user_view_type: NotRequired[str]


class Permissions(TypedDict):
    admin: NotRequired[bool]
    maintain: NotRequired[bool]
    push: NotRequired[bool]
    triage: NotRequired[bool]
    pull: NotRequired[bool]


class CodeOfConduct(TypedDict):
    """
    Code Of Conduct
    """

    key: str
    name: str
    url: str
    body: NotRequired[str]
    html_url: str | None


class License(TypedDict):
    key: NotRequired[str]
    name: NotRequired[str]
    spdx_id: NotRequired[str]
    url: NotRequired[str]
    node_id: NotRequired[str]


class AdvancedSecurity(TypedDict):
    """
    Enable or disable GitHub Advanced Security for the repository.

    For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

    """

    status: NotRequired[Literal["enabled", "disabled"]]


class CodeSecurity(TypedDict):
    status: NotRequired[Literal["enabled", "disabled"]]


class DependabotSecurityUpdates(TypedDict):
    """
    Enable or disable Dependabot security updates for the repository.
    """

    status: NotRequired[Literal["enabled", "disabled"]]
    """
    The enablement status of Dependabot security updates for the repository.
    """


class SecretScanning(TypedDict):
    status: NotRequired[Literal["enabled", "disabled"]]


class SecretScanningPushProtection(TypedDict):
    status: NotRequired[Literal["enabled", "disabled"]]


class SecretScanningNonProviderPatterns(TypedDict):
    status: NotRequired[Literal["enabled", "disabled"]]


class SecretScanningAiDetection(TypedDict):
    status: NotRequired[Literal["enabled", "disabled"]]


class SecurityAndAnalysis(TypedDict):
    advanced_security: NotRequired[AdvancedSecurity]
    """
    Enable or disable GitHub Advanced Security for the repository.

    For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

    """
    code_security: NotRequired[CodeSecurity]
    dependabot_security_updates: NotRequired[DependabotSecurityUpdates]
    """
    Enable or disable Dependabot security updates for the repository.
    """
    secret_scanning: NotRequired[SecretScanning]
    secret_scanning_push_protection: NotRequired[SecretScanningPushProtection]
    secret_scanning_non_provider_patterns: NotRequired[SecretScanningNonProviderPatterns]
    secret_scanning_ai_detection: NotRequired[SecretScanningAiDetection]


class Repository(TypedDict):
    """
    Minimal Repository
    """

    id: int
    node_id: str
    name: str
    full_name: str
    owner: Owner
    """
    A GitHub user.
    """
    private: bool
    html_url: str
    description: str | None
    fork: bool
    url: str
    archive_url: str
    assignees_url: str
    blobs_url: str
    branches_url: str
    collaborators_url: str
    comments_url: str
    commits_url: str
    compare_url: str
    contents_url: str
    contributors_url: str
    deployments_url: str
    downloads_url: str
    events_url: str
    forks_url: str
    git_commits_url: str
    git_refs_url: str
    git_tags_url: str
    git_url: NotRequired[str]
    issue_comment_url: str
    issue_events_url: str
    issues_url: str
    keys_url: str
    labels_url: str
    languages_url: str
    merges_url: str
    milestones_url: str
    notifications_url: str
    pulls_url: str
    releases_url: str
    ssh_url: NotRequired[str]
    stargazers_url: str
    statuses_url: str
    subscribers_url: str
    subscription_url: str
    tags_url: str
    teams_url: str
    trees_url: str
    clone_url: NotRequired[str]
    mirror_url: NotRequired[str | None]
    hooks_url: str
    svn_url: NotRequired[str]
    homepage: NotRequired[str | None]
    language: NotRequired[str | None]
    forks_count: NotRequired[int]
    stargazers_count: NotRequired[int]
    watchers_count: NotRequired[int]
    size: NotRequired[int]
    """
    The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
    """
    default_branch: NotRequired[str]
    open_issues_count: NotRequired[int]
    is_template: NotRequired[bool]
    topics: NotRequired[list[str]]
    has_issues: NotRequired[bool]
    has_projects: NotRequired[bool]
    has_wiki: NotRequired[bool]
    has_pages: NotRequired[bool]
    has_downloads: NotRequired[bool]
    has_discussions: NotRequired[bool]
    archived: NotRequired[bool]
    disabled: NotRequired[bool]
    visibility: NotRequired[str]
    pushed_at: NotRequired[str | None]
    created_at: NotRequired[str | None]
    updated_at: NotRequired[str | None]
    permissions: NotRequired[Permissions]
    role_name: NotRequired[str]
    temp_clone_token: NotRequired[str]
    delete_branch_on_merge: NotRequired[bool]
    subscribers_count: NotRequired[int]
    network_count: NotRequired[int]
    code_of_conduct: NotRequired[CodeOfConduct]
    """
    Code Of Conduct
    """
    license: NotRequired[License | None]
    forks: NotRequired[int]
    open_issues: NotRequired[int]
    watchers: NotRequired[int]
    allow_forking: NotRequired[bool]
    web_commit_signoff_required: NotRequired[bool]
    security_and_analysis: NotRequired[SecurityAndAnalysis | None]
    custom_properties: NotRequired[dict[str, Any]]
    """
    The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
    """


class Package(TypedDict):
    """
    A software package
    """

    id: int
    """
    Unique identifier of the package.
    """
    name: str
    """
    The name of the package.
    """
    package_type: Literal["npm", "maven", "rubygems", "docker", "nuget", "container"]
    url: str
    html_url: str
    version_count: int
    """
    The number of versions of the package.
    """
    visibility: Literal["private", "public"]
    owner: NotRequired[Owner | None]
    repository: NotRequired[Repository | None]
    created_at: str
    updated_at: str
